version: "3.9"

services:
  user:
    build:
      context: ./user/.
      dockerfile: Dockerfile
    ports:
      - "30000:3000"
    depends_on:
      - user-db
    environment:
      DB_HOST: user-db
      DB_PORT: 5432
      DB_NAME: users
      DB_USER: root
      DB_PASSWORD: password

  user-db:
    image: postgres:15.2
    restart: unless-stopped
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - user-db-data:/var/lib/postgresql/data

  message:
    build:
      context: ./message/.
      dockerfile: Dockerfile
    ports:
      - "30001:3000"
    depends_on:
      - message-db
      - message-archive-queue
    environment:
      DB_HOST: message-db
      DB_PORT: 5432
      DB_NAME: messages
      DB_USER: root
      DB_PASSWORD: password

  message-db:
    image: postgres:15.2
    restart: unless-stopped
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: messages
    volumes:
      - message-db-data:/var/lib/postgresql/data

  friend:
    build:
      context: ./friend/.
      dockerfile: Dockerfile
    ports:
      - "30002:3000"
    depends_on:
      - friend-db
    environment:
      DB_HOST: friend-db
      DB_PORT: 5432
      DB_NAME: friends
      DB_USER: root
      DB_PASSWORD: password

  friend-db:
    image: postgres:15.2
    restart: unless-stopped
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: friends
    volumes:
      - friend-db-data:/var/lib/postgresql/data

  gateway:
    image: nginx:1.23.4
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - user
      - message
      - friend
      - frontend
      - websocket
      - message-archive

  frontend:
    build:
      context: ./frontend/.
      dockerfile: Dockerfile
    ports:
      - "30003:3000"

  websocket:
    build:
      context: ./websocket/.
      dockerfile: Dockerfile
    ports:
      - "30004:3000"

  message-archive-queue:
    image: rabbitmq:3.12-rc-management
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - message-queue-data:/var/lib/rabbitmq

  message-archive:
    build:
      context: ./message-archive/.
      dockerfile: Dockerfile
    ports:
      - "30005:3000"
    environment:
      DB_HOST: message-archive-db
      DB_PORT: 5432
      DB_NAME: archivemessages
      DB_USER: root
      DB_PASSWORD: password

  message-archive-db:
    image: postgres:15.2
    restart: unless-stopped
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: archivemessages
    volumes:
      - message-archive-db-data:/var/lib/postgresql/data

  db-explorer:
    image: adminer
    restart: unless-stopped
    ports:
      - "8001:8080"

volumes:
  user-db-data:
  message-db-data:
  friend-db-data:
  message-queue-data:
  message-archive-db-data:
